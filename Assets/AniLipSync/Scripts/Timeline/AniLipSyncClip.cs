using UnityEngine;
using UnityEngine.Playables;
using UnityEngine.Timeline;

namespace XVI.AniLipSync
{
    public class AniLipSyncClip : PlayableAsset,ITimelineClipAsset
    {
        [Tooltip("Sequence generated by 'Tool/Oculus/Generate Lip Sync Asset'")]
        public OVRLipSyncSequence syncSequence;

        [Tooltip("aa, E, ih, oh, ou のそれぞれの音素へ遷移する際に、BlendShapeの重みを時間をかけて変化させるためのカーブ")]
        public AnimationCurve[] transitionCurves = new AnimationCurve[5];

        [Tooltip("aa, E, ih, oh, ouの順で割り当てるBlendShapeのindex")]
        public int[] visemeToBlendShape = new int[5];

        [Tooltip("カーブの値をBlendShapeに適用する際の倍率")]
        public float curveAmplifier = 100.0f;

        [Range(0.0f, 100.0f), Tooltip("この閾値未満の音素の重みは無視する")]
        public float weightThreashold = 2.0f;



        public SkinnedMeshRenderer skinnedMeshRenderer { get; set; }

        public TimelineClip owningClip { get; set; }

        public ClipCaps clipCaps
        {
            get
            {
                return ClipCaps.None;
            }
        }

        public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
        {
            var playable = ScriptPlayable<AniLipSyncBehaviour>.Create(graph);
            playable.GetBehaviour().clipAsset = this;
            return playable;
        }

        /// <summary>
        /// 设置唇形到BlendShap上。
        /// </summary>
        public void SetVisemeToBlendShap(int index, float value)
        {
            //skinnedMeshRenderer.SetBlendShapeWeight(visemeToBlendShape[index], transitionCurves[index].Evaluate(transitionTimer) * curveAmplifier);
            skinnedMeshRenderer.SetBlendShapeWeight(visemeToBlendShape[index], value * curveAmplifier);
        }


        public void ResetBlendShape()
        {
            for (int i = 0; i < visemeToBlendShape.Length; i++)
            {
                if (visemeToBlendShape[i] != -1)
                {
                    skinnedMeshRenderer.SetBlendShapeWeight(
                        visemeToBlendShape[i],
                        0);
                }
            }
        }

    }
}

